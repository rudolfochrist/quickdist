#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  (ql:quickload '(quickdist
                  local-time
                  quri
                  clack
                  lack-middleware-static
                  clack-handler-hunchentoot
                  defmain)
                :silent t))

(defpackage :ros.script.quickdist
  (:use :cl
        :defmain))
(in-package :ros.script.quickdist)


(defun get-current-date ()
  (local-time:format-timestring nil
                                (local-time:today)
                                :format local-time:+rfc3339-format/date-only+))


(defmain main ((name "A name for the distribution"
                     :default "quickdist")
               (base-url "A URL from which you will serve your distribution."
                         :default "http://localhost:8080/")
               (any-asd "Process any asd file, not only toplevel."
                        :flag t)
               (output-dir "A directory where to put archives and metadata."
                           :default "dists")
               (dist-version "A version of distribution"
                             :default (get-current-date))
               (serve "If specified, then local HTTP server will be started to serve distribution on a port extracted from the URL."
                      :flag t)
               &rest projects-dir)
  (unless (= (length projects-dir)
             1)
    (format t "Please, specify one project dir.~%")
    (uiop:quit 1))

  (let ((ignore-filename-p (cond
                             (any-asd (constantly
                                       (constantly nil)))
                             (t (constantly
                                 quickdist:*default-ignore-filename-p*)))))
    (quickdist:quickdist :name name
                         :base-url base-url
                         :projects-dir (first projects-dir)
                         :dists-dir output-dir
                         :get-ignore-filename-p ignore-filename-p
                         :version dist-version))
  
  (let ((url (format nil "~A/~A.txt"
                     (string-right-trim '(#\/)
                                        base-url)
                     name)))

    (if serve
        (let* ((parsed-url (quri:uri base-url))
               (port (quri:uri-port parsed-url)))
          (format t "Serving files on port ~A.~%" port)
          (format t "Open a Lisp REPL and evaluate such code:

\(ql-dist:install-dist \"~A\" :prompt nil\)

"
                  url)
          (clack:clackup
           (lack:builder (:static :root "dists/" :path "/")
                         nil)
           :port port
           :silent t
           :use-thread nil))
        
        ;; if --serve was not specified, then just exit
        (format t "Now setup some server to serve files from directory \"~A\".
Or run quickdist again and add --serve option.
And make sure ~A is accessible from the browser.

"
                output-dir
                url))))
